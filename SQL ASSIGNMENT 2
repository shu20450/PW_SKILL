--Assignment Questions

Basic Aggregate Functions:

Question 1:
Retrieve the total number of rentals made in the Sakila database.

SELECT COUNT(*) AS total_rentals
FROM rental;

Question 2:
Find the average rental duration (in days) of movies rented from the Sakila database.

SELECT AVG(DATEDIFF(return_date, rental_date)) AS average_rental_duration
FROM rental
JOIN inventory ON rental.inventory_id = inventory.inventory_id;


String Functions:

Question 3:
Display the first name and last name of customers in uppercase.

SELECT UPPER(first_name) AS upper_first_name, UPPER(last_name) AS upper_last_name
FROM customer;


Question 4:
Extract the month from the rental date and display it alongside the rental ID.

SELECT rental_id, MONTH(rental_date) AS rental_month
FROM rental;


GROUP BY:

Question 5:
Retrieve the count of rentals for each customer (display customer ID and the count of rentals).

SELECT c.customer_id, COUNT(r.rental_id) AS rental_count
FROM customer c
LEFT JOIN rental r ON c.customer_id = r.customer_id
GROUP BY c.customer_id;


Question 6:
Find the total revenue generated by each store.

SELECT s.store_id, 
       CONCAT(st.first_name, ' ', st.last_name) AS staff_name,
       SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.manager_staff_id = st.staff_id
JOIN customer c ON s.store_id = c.store_id
JOIN payment p ON c.customer_id = p.customer_id
JOIN rental r ON p.rental_id = r.rental_id
GROUP BY s.store_id, staff_name;


Joins:

7.Display the title of the movie, customer s first name, and last name who rented it.

SELECT f.title AS movie_title, 
       c.first_name AS customer_first_name, 
       c.last_name AS customer_last_name
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer c ON r.customer_id = c.customer_id;


Question 8:
Retrieve the names of all actors who have appeared in the film "Gone with the Wind."

SELECT a.actor_id, a.first_name, a.last_name
FROM actor a
JOIN film_actor fa ON a.actor_id = fa.actor_id
JOIN film f ON fa.film_id = f.film_id
WHERE f.title = 'Gone with the Wind';



GROUP BY:

Question 1:
Determine the total number of rentals for each category of movies.

SELECT c.name AS category_name, COUNT(r.rental_id) AS total_rentals
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY c.name;


Question 2:
Find the average rental rate of movies in each language.

SELECT l.name AS language, AVG(f.rental_rate) AS average_rental_rate
FROM language l
JOIN film f ON l.language_id = f.language_id
GROUP BY l.name;


Joins:

Question 3:
Retrieve the customer names along with the total amount they've spent on rentals.

SELECT c.first_name, c.last_name, SUM(p.amount) AS total_amount_spent
FROM customer c
JOIN payment p ON c.customer_id = p.customer_id
GROUP BY c.customer_id;


Question 4:
List the titles of movies rented by each customer in a particular city (e.g., 'London').

SELECT c.first_name, c.last_name, f.title AS movie_title
FROM customer c
JOIN address a ON c.address_id = a.address_id
JOIN city ci ON a.city_id = ci.city_id
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
WHERE ci.city = 'London'
ORDER BY c.first_name, c.last_name, f.title;



Advanced Joins and GROUP BY:

Question 5:
Display the top 5 rented movies along with the number of times they've been rented.

SELECT f.title AS movie_title, COUNT(r.rental_id) AS rental_count
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 5;


Question 6:
Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).

SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN store s ON i.store_id = s.store_id
WHERE s.store_id IN (1, 2)
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT s.store_id) = 2;
